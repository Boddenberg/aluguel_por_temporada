name: Build and Deploy to AWS

on:
  push:
    branches:
      - main
permissions:
  id-token: write
  contents: read
env:
  AWS_REGION: sa-east-1
  ECR_REPOSITORY: aluguel-por-temporada
  ECS_SERVICE: aluguel-por-temporada-service
  ECS_CLUSTER: cluster-aluguel-por-temporada-projeto
  CONTAINER_NAME: "aluguel-por-temporada-container"
  
jobs:
  deploy:
    name: Deploy to Amazon ECS
    runs-on: ubuntu-latest

    steps:
      # Baixa o código do repositório
      - name: Checkout repository
        uses: actions/checkout@v3
        
      # Configura as credenciais da AWS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          role-to-assume: arn:aws:iam::257394470489:role/role-ecs-github-access
          aws-region: ${{ env.AWS_REGION }}

      # Faz login no Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
          
      # Compila e faz upload da imagem Docker para o Amazon ECR
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      # Baixa a definição mais recente da task
      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition task-definition-family-aluguel-por-temporada --query taskDefinition > task-definition.json

      # Atualiza a definição da task com a nova imagem Docker
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}
        
      # Implanta a nova definição da task no cluster ECS
      - name: Amazon ECS Deploy
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
