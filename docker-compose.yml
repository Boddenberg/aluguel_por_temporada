version: '3.3'
services:
  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'db'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - '3306:3306'
    expose:
      - '3306'
    volumes:
#      comando para armazenar os dados persistidos
      - ./init/db:/var/lib/postgresql/init
#      comando para criar as tabelas via SQL
      - ./init:/docker-entrypoint-initdb.d
  aws:
    image: 'localstack/localstack'
    container_name: 'localstack'
    environment:
      - SERVICES=sns, s3
      - DEFAULT_REGION=us-east-1
      - AWS_DEFAULT_REGION=us-east-1
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
#    volumes:
#      - ./aws:/etc/localstack/init/ready.d
    ports:
      - '4566:4566'
  prometheus:
    image: 'prom/prometheus:latest'
    ports:
      - '9090:9090'
    command: '--config.file=/etc/prometheus/config.yml'
    volumes:
      - './src/main/resources/prometheus.yml:/etc/prometheus/config.yml'

  grafana:
    image: grafana/grafana:9.5.2
    container_name: grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    volumes:
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/var/lib/grafana/provisioning/dashboards

  terraform:
    image: hashicorp/terraform:1.3.3
    depends_on:
      - aws
    volumes:
      - ./infra/terraform/:/infra
    working_dir: /infra
    entrypoint: >
      sh -c "
      terraform init 
      && terraform fmt 
      && terraform validate 
      && terraform plan -out='infra.out' 
      && terraform apply infra.out"